name: Docker Compose CI

on:
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ "develop" ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]

    steps:
    - uses: actions/checkout@v3

    # Set up Python
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: 'Create db env file'
      run: |
        echo "${{ secrets.DB_ENV_FILE }}" > ./backend/db/.env

    - name: 'Create django env file'
      run: |
        echo "${{ secrets.DJANGO_ENV_FILE }}" > ./backend/django_back/django_back/.env

    - name: 'Create api env file'
      run: |
        echo "${{ secrets.API_ENV_FILE }}" > ./backend/django_back/api/.env

    - name: 'Create api config file'
      run: |
        echo "${{ secrets.API_CONFIG_INI_FILE }}" > ./backend/django_back/api/lib/config.ini
    

    # Install Docker Compose
    - name: Install Docker Compose
      run: |
        sudo apt-get update
        sudo apt-get install -y docker-compose

    # Docker Compose 실행
    - name: Start containers
      run: docker-compose up -d
        
    # 테스트 수행
    - name: Run unit tests
      run: |
        python -m pip install --upgrade pip
        python -m pip install -r requirements.txt
        python manage.py test


    - name: process 로그 출력
      run: docker ps -a

    # ... (컨테이너 실행 후 테스트 또는 빌드 등 다른 작업을 진행)

    # Docker Compose 중지
    - name: Stop containers
      run: docker-compose down

